# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker 

trigger:
- develop
- main

variables:
  isDevelop: $[eq(variables['Build.SourceBranch'], 'refs/heads/users/abodineni/newAksDeployment')]
  isMaster: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]

  valuesFile: 'values.yaml'
  armServiceConnection: 'CSP-SubscriptionResources'

###########################################################################################
# SIT VARIABLES
###########################################################################################
  keyvaultNameSIT: 'csp-sit'
  
  aksResourceGroupSIT: 'csp-sit'
  aksWestUS3ClusterSIT: 'k8s-csp-sit-westus3'
  aksEastUSClusterSIT: 'k8s-csp-sit-eastus'
  acrServiceConnectionSIT: 'csp-acr-sit'
  aksWestUS3AgentPoolClientIdSIT: '76de7856-8ec1-47b6-9de5-be5b833ef1b3'
  aksEastUSAgentPoolClientIdSIT: '0719a808-41b7-422b-b0bb-2d5e8a95d2ca'
  containerRegistrySIT: 'acrcspsit5769997721069705598.azurecr.io'
  replicaCountSIT: 2

  apimARMServiceConnectionSIT: 'apim-svc'
  apimInstanceNameSIT: 'adarsh-apim'
  apimResourceGroupNameSIT: 'apim'
  apimApiNameSIT: 'CSP API'
  swaggerUrlSIT: 'https://fd-csp-sit-h7f5bmcpfahwfwfr.z01.azurefd.net/csp-api/swagger/v1/swagger.json'
  serviceUrlSIT: 'https://fd-csp-sit-h7f5bmcpfahwfwfr.z01.azurefd.net/csp-api'
  apiPrefixSIT: 'csp-api'
  graphQLSuffixSIT: 'csp-api/graphql'
  apimGraphQLApiNameSIT: 'CSP GraphQL API'
  graphQLServiceUrlSIT: 'https://fd-csp-sit-h7f5bmcpfahwfwfr.z01.azurefd.net/csp-api/graphql'

###########################################################################################
# UAT VARIABLES
###########################################################################################
  keyvaultNameUAT: 'csp-kevt-uat'
  
  aksResourceGroupUAT: 'k8s-rmex-uat'
  aksWestUS2ClusterUAT: 'k8s-rmex-uat-westus2'
  aksEastUS2ClusterUAT: 'k8s-rmex-uat-eastus2'
  acrServiceConnectionUAT: 'RM-UAT-ACR-2021-05-01'
  aksWestUS2AgentPoolClientIdUAT: 'a58c049e-79e7-4637-9a30-3fac1a10a7d9'
  aksEastUS2AgentPoolClientIdUAT: '445dcd8a-9e14-4d88-94fe-4f2990080869'
  containerRegistryUAT: 'acrrmuat10009753473648393486.azurecr.io'
  replicaCountUAT: 2

  apimARMServiceConnectionUAT: 'RM-APIM-20-05'
  apimInstanceNameUAT: 'professionalserviceint'
  apimResourceGroupNameUAT: 'FIPS-INT-RG'
  apimApiNameUAT: 'RMEx CSP UAT API'
  swaggerUrlUAT: 'https://fd-rmex-uat.azurefd.net/rm-csp-api/swagger/v1/swagger.json'
  serviceUrlUAT: 'https://fd-rmex-uat.azurefd.net/rm-csp-api'
  apiPrefixUAT: 'rm-csp-uat-api'

###########################################################################################
# PROD VARIABLES
###########################################################################################
  keyvaultNamePROD: 'csp-kevt-prod'
  
  aksResourceGroupPROD: 'k8s-rmex-prod'
  aksWestUS2ClusterPROD: 'k8s-rmex-prod-westus2'
  aksEastUS2ClusterPROD: 'k8s-rmex-prod-eastus2'
  acrServiceConnectionPROD: 'RM-PROD-ACR-2021-06-01'
  aksWestUS2AgentPoolClientIdPROD: '4ccd4012-1247-40c4-a080-0e8273292d24'
  aksEastUS2AgentPoolClientIdPROD: 'f7d4ffaf-148a-4078-8809-d6b4b38a0073'
  containerRegistryPROD: 'acrrmprod10359943631172522997.azurecr.io'
  replicaCountPROD: 2

  apimARMServiceConnectionPROD: 'RM-APIM-PRD-20-05-21'
  apimInstanceNamePROD: 'professionalservice'
  apimResourceGroupNamePROD: 'FIPS-PROD-RG'
  apimApiNamePROD: 'RMEx CSP API'
  swaggerUrlPROD: 'https://fd-rmex-prod.azurefd.net/rm-csp-api/swagger/v1/swagger.json'
  serviceUrlPROD: 'https://fd-rmex-prod.azurefd.net/rm-csp-api'
  apiPrefixPROD: 'rm-csp-api'

pool:
  vmImage: ubuntu-latest

stages:
- stage: publish_helm_artifacts_stage
  displayName: 'Publish helm artifacts'
  condition: and(succeeded(), or(eq(variables.isDevelop, true), eq(variables.isMaster, true)))
  jobs:
  - job: publish_helm_artifacts_job
    displayName: Publish helm artifacts
    steps:
    - publish: '$(Build.SourcesDirectory)'
      artifact: cspservice-artifacts
      
- stage: nonprod_import_api_to_apim_sit_stage
  displayName: Import API to APIM for SIT
  jobs:
  - deployment: nonprod_import_api_to_apim_job
    displayName: Import API to APIM in SIT
    environment: 'PS-SD-CSP-SIT'
    strategy:
      runOnce:
        deploy:
          steps:
          - template: azure-pipeline-apitoapim-template.yml
            parameters:
              apimARMServiceConnection: '$(apimARMServiceConnectionSIT)'
              apimInstanceName: '$(apimInstanceNameSIT)'
              apimResourceGroupName: '$(apimResourceGroupNameSIT)'
              apimApiName: '$(apimApiNameSIT)'
              swaggerUrl: '$(swaggerUrlSIT)'
              serviceUrl: '$(serviceUrlSIT)'
              apiPrefix: '$(apiPrefixSIT)'
              graphQLSuffix: '$(graphQLSuffixSIT)'
              apimGraphQLApiName: '$(apimGraphQLApiNameSIT)'
              graphQLServiceUrl: '$(graphQLServiceUrlSIT)'
